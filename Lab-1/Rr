#include <stdio.h>

#define MAX 100

int main() {
    int n, i, bt[MAX], rt[MAX], time = 0, tq;
    int wt[MAX], tat[MAX], ct[MAX];
    int remain;

    printf("Enter number of processes: ");
    scanf("%d", &n);
    remain = n;

    for (i = 0; i < n; i++) {
        printf("Enter Burst Time for Process P%d: ", i + 1);
        scanf("%d", &bt[i]);
        rt[i] = bt[i]; // initialize remaining time
    }

    printf("Enter Time Quantum: ");
    scanf("%d", &tq);

    while (remain > 0) {
        for (i = 0; i < n; i++) {
            if (rt[i] > 0) {
                if (rt[i] > tq) {
                    time += tq;
                    rt[i] -= tq;
                } else {
                    time += rt[i];
                    rt[i] = 0;
                    ct[i] = time;  // Completion time
                    remain--;
                }
            }
        }
    }

    float avg_wt = 0, avg_tat = 0;

    printf("\nProcess\tBT\tCT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        tat[i] = ct[i];           // Turnaround Time = Completion Time - Arrival Time (0)
        wt[i] = tat[i] - bt[i];   // Waiting Time = Turnaround Time - Burst Time
        avg_wt += wt[i];
        avg_tat += tat[i];
        printf("P%d\t%d\t%d\t%d\t%d\n", i + 1, bt[i], ct[i], tat[i], wt[i]);
    }

    avg_wt /= n;
    avg_tat /= n;

    printf("\nAverage Waiting Time: %.2f\n", avg_wt);
    printf("Average Turnaround Time: %.2f\n", avg_tat);

    return 0;
}
