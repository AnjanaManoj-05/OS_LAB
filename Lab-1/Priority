#include <stdio.h>

struct Process {
    int id;
    int bt;   // Burst Time
    int prio; // Priority (lower value = higher priority)
    int ct;   // Completion Time
    int tat;  // Turnaround Time
    int wt;   // Waiting Time
};

void sortByPriority(struct Process p[], int n) {
    struct Process temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (p[i].prio > p[j].prio) {
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }
}

int main() {
    int n, time = 0;
    struct Process p[100];

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        p[i].id = i + 1;
        printf("Enter Burst Time and Priority for Process P%d: ", i + 1);
        scanf("%d%d", &p[i].bt, &p[i].prio);
    }

    // Sort all processes by priority (lower value = higher priority)
    sortByPriority(p, n);

    for (int i = 0; i < n; i++) {
        time += p[i].bt;
        p[i].ct = time;
        p[i].tat = p[i].ct;         // TAT = CT - AT (AT = 0)
        p[i].wt = p[i].tat - p[i].bt;
    }

    float avg_tat = 0, avg_wt = 0;
    printf("\nProcess\tBT\tPriority\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        avg_tat += p[i].tat;
        avg_wt += p[i].wt;
        printf("P%d\t%d\t%d\t\t%d\t%d\t%d\n", p[i].id, p[i].bt, p[i].prio, p[i].ct, p[i].tat, p[i].wt);
    }

    avg_tat /= n;
    avg_wt /= n;

    printf("\nAverage Turnaround Time: %.2f\n", avg_tat);
    printf("Average Waiting Time: %.2f\n", avg_wt);

    return 0;
}
